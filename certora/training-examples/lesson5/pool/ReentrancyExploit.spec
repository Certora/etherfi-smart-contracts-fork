/* Exploiting the vulnerabilities of `UnguardedPool.sol` */

using Asset as _Asset;

methods {
    function totalSupply() external returns (uint256) envfree;
    function balanceOf(address) external returns (uint256) envfree;
    function Asset.balanceOf(address) external returns (uint256) envfree;
}


/// @title Example of exploiting lack of re-entrancy guard
rule reentrancyExploitExample(address depositor, uint256 amount) {
    // Require that neither depositor nor asset deposited before
    require balanceOf(depositor) == 0;  // Shares
    require balanceOf(_Asset) == 0;  // Shares

    require !_Asset._is_exploiting;

    uint256 balanceBefore = _Asset.balanceOf(_Asset);

    env e;
    require e.msg.sender == depositor;
    deposit(e, amount);

    uint256 balanceAfter = _Asset.balanceOf(_Asset);
    satisfy balanceAfter > balanceBefore;
}
