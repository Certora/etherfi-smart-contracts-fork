Miscellaneous rule types
========================

All the examples here are found at :clink:`/certora/specs/lesson1/Examples.spec`.

.. index::
   single: revert
   single: withrevert

Revert conditions
-----------------

* Use :cvl:`@withrevert`.
* The results will be stored in :cvl:`lastReverted` (which is a boolean).
* Any other Solidity call will *change* the value of :cvl:`lastReverted`.
* Best practice is to store it immediately, e.g. :cvl:`bool reverted = lastReverted;`.

Wrong revert rule
^^^^^^^^^^^^^^^^^

.. cvlinclude:: ../../../specs/lesson1/Examples.spec
   :cvlobject: wrongRevertRule
   :caption: :clink:`wrongRevertRule</certora/specs/lesson1/Examples.spec>`

* This rule is violated, see `transferRevertsWrong report`_
* What is the mistake in the rule?

.. dropdown:: Fixed rule

   .. cvlinclude:: ../../../specs/lesson1/Examples.spec
      :cvlobject: revertRule

   * Report: `fixed revert rule report`_.

Missing revert conditions
^^^^^^^^^^^^^^^^^^^^^^^^^

.. cvlinclude:: ../../../specs/lesson1/Examples.spec
   :cvlobject: wrongFullRevertConditions
   :caption: :clink:`wrongRevertRule</certora/specs/lesson1/Examples.spec>`

* This rule attempts to show all possible revert cases.
* However, there are counter examples:

  * Counter example `non-zero message value`_.
  * Counter example `unauthorized message sender`_.
* How to fix this rule?

.. dropdown:: Fixed rule

   .. cvlinclude:: ../../../specs/lesson1/Examples.spec
      :cvlobject: fullRevertConditions

   * Report: `full revert conditions report`_.


.. index::
   single: satisfy

Satisfy rules
-------------
* The :cvl:`satisfy` statement generates positive examples.
* Its syntax is :cvl:`satisfy <boolean condition>;`.
* Useful for "debugging".
* See `satisfy rules report`_ for the examples generated by the two rules below.

Last key example
^^^^^^^^^^^^^^^^
Shows that using the last key is possible.

.. cvlinclude:: ../../../specs/lesson1/Examples.spec
   :cvlobject: satisfyExampleLastKey

First key example
^^^^^^^^^^^^^^^^^
Shows that using the first key is possible.

.. cvlinclude:: ../../../specs/lesson1/Examples.spec
   :cvlobject: satisfyExampleFirstKey


.. Links
   -----

.. _transferRevertsWrong report:
   https://prover.certora.com/output/98279/461f7f9c233e469e9b1cdca37ab46aa8?anonymousKey=f3579813aeeab390a23a8794f0abdda9eafcecb1

.. _fixed revert rule report:
   https://prover.certora.com/output/98279/3081060bf48b4d549006edfd50aa4863?anonymousKey=5f485974483fbd489abd3d3b1dcb5b07d539738a

.. _non-zero message value:
   https://prover.certora.com/output/98279/a8808464a54b48249301a137fcb5728a/?anonymousKey=4f8dac7e250572c23effd80d5c04f366af9a44ad

.. _unauthorized message sender:
   https://prover.certora.com/output/98279/53a1ff1a256242d5991e64e14d6f5a10/?anonymousKey=50711e5b96852944a7a79a02a1723ab11d5d8ad9

.. _full revert conditions report:
   https://prover.certora.com/output/98279/76928ccb281e439e97acaeefccbd49a7?anonymousKey=21014d5629cb02e29849f1760127c19c0668179d

.. _satisfy rules report:
   https://prover.certora.com/output/98279/f91296f5dc414d1abf8dd419d7004e53?anonymousKey=2f5196be77f896a9db8d52f50e556324cac723d7
